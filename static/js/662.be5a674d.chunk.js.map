{"version":3,"file":"static/js/662.be5a674d.chunk.js","mappings":"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","sources":["components/ContactsItem.jsx","components/redux/contacts/selectors.js","components/ContactsList.jsx","components/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from './redux/contacts/operations';\n\nexport const ContactsItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <>\n      <span>\n        {contact.name} : {contact.phone}\n      </span>\n      <button onClick={handleDelete}>Delete</button>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filters;\n","import { ContactsItem } from './ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from './redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  let contacts = useSelector(getContacts);\n  let filterValue = useSelector(getFilter);\n\n  if (filterValue) {\n    contacts = contacts.filter(item =>\n      item.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n\n  return (\n    <section title=\"Contacts\">\n      <h2>Contacts</h2>\n      <ul className=\"contacts__list\">\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            <ContactsItem contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from './redux/contacts/operations';\nimport { getContacts } from './redux/contacts/selectors';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const [contactName, setContactName] = useState('');\n  const [number, setNumber] = useState('');\n  let contacts = useSelector(getContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const saved = saveContact({ contactName, number });\n\n    if (saved) {\n      form.reset();\n    }\n  };\n\n  const saveContact = contact => {\n    console.log('contact', contact);\n    const checkName = contacts\n\n      .map(item => item.name.toLowerCase())\n      .some(item => item === contactName.toLowerCase());\n\n    if (checkName) {\n      window.alert(`This contact ${contactName} already excist `);\n      return false;\n    } else {\n      dispatch(addContact({ name: contactName, phone: number }));\n      return true;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Add your name...\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Contact\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Add your number...\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Send</button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n// ssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\nimport { ContactsList } from 'components/ContactsList';\nimport { Form } from 'components/Form';\nimport { fetchContacts } from '../components/redux/contacts/operations';\nimport { getIsLoading } from '../components/redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <Form />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["ContactsItem","_ref","contact","dispatch","useDispatch","_jsxs","_Fragment","children","name","phone","_jsx","onClick","deleteContact","id","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filters","ContactsList","useSelector","filterValue","filter","item","toLowerCase","includes","title","className","map","Form","_useState","useState","_useState2","_slicedToArray","contactName","setContactName","_useState3","_useState4","number","setNumber","handleChange","event","_event$target","target","value","saveContact","console","log","some","window","alert","concat","addContact","onSubmit","evt","preventDefault","form","reset","onChange","type","placeholder","required","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}